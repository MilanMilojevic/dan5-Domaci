{"ast":null,"code":"import { SimpleChanges } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction OddComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Odd - \", ctx_r0.number, \"\");\n  }\n}\nexport var OddComponent = /** @class */function () {\n  function OddComponent() {\n    this.isOdd = false;\n  }\n  OddComponent.prototype.ngOnChanges = function (changes) {\n    if (changes.number) {\n      this.isOdd = this.number % 2 !== 0;\n    }\n  };\n  OddComponent.ɵfac = function OddComponent_Factory(t) {\n    return new (t || OddComponent)();\n  };\n  OddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OddComponent,\n    selectors: [[\"app-odd\"]],\n    inputs: {\n      number: \"number\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"odd\", 4, \"ngIf\"], [1, \"odd\"]],\n    template: function OddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, OddComponent_p_0_Template, 2, 1, \"p\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isOdd);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"p[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return OddComponent;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}